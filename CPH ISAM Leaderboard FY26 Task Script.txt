-- select * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT_ACTUAL WHERE ACCOUNT_ID='840555'
-- select TOP 10* FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT 
-- select TOP 10* FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_ACCOUNT_GOALS

--***********
--****FY26 VARICENT DATA WILL BE AVAILABLE ON 6/1/25 BASED ON VENKATA'S PLAN 
--***********

SHOW TASKS LIKE 'TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM%';
DESC TASK TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM;
execute task TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM;

select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
scheduled_time_range_start=>dateadd('day',-7,current_timestamp()),
result_limit => 10,
task_name=>'TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM'));
    
alter task TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM resume; --It was by default suspended  ( run this command Only first time since by default its suspended)


--TASK
CREATE OR REPLACE TASK TSK_FELICIA_H_CPH_FY26_LEADERBOARD_ISAM
WAREHOUSE = SBX_EA_GENERAL_FR_WH
SCHEDULE = 'USING CRON 50 6 * * 1-5 America/Chicago' -- 6:50 AM on weekdays
TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'
AS

CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.FY26_LEADERBOARD_ISAM_CPH AS
WITH 
--PULL MAX SALES DATE FOR ACTUALS
-- CREATE OR REPLACE TABLE 
DATE_PREP AS (
SELECT DISTINCT CASE WHEN CALENDAR_MONTH='APRIL 2025' THEN '2026-01 APR'
             WHEN CALENDAR_MONTH='MAY 2025' THEN '2026-02 MAY'
             WHEN CALENDAR_MONTH='JUNE 2025' THEN '2026-03 JUN'
             WHEN CALENDAR_MONTH='JULY 2025' THEN '2026-04 JUL'
             WHEN CALENDAR_MONTH='AUGUST 2025' THEN '2026-05 AUG'
             WHEN CALENDAR_MONTH='SEPTEMBER 2025' THEN '2026-06 SEP'
             WHEN CALENDAR_MONTH='OCTOBER 2025' THEN '2026-07 OCT'
             WHEN CALENDAR_MONTH='NOVEMBER 2025' THEN '2026-08 NOV'
             WHEN CALENDAR_MONTH='DECEMBER 2025' THEN '2026-09 DEC'
             WHEN CALENDAR_MONTH='JANUARY 2026' THEN '2026-10 JAN'
             WHEN CALENDAR_MONTH='FEBRUARY 2026' THEN '2026-11 FEB'
             ELSE '2026-12 MAR' END AS PERIOD
FROM    DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT_ACTUAL
GROUP BY 1
-- WHERE   MARKET_SEGMENT = 'Retail'
),

-- CREATE OR REPLACE TABLE 
MAX_DATE AS (
SELECT  MAX(PERIOD) MAX_PERIOD
FROM    DATE_PREP
-- WHERE   MARKET_SEGMENT = 'Retail'
),

--LOCATION ID
-- CREATE OR REPLACE TABLE 
LOC AS (
SELECT  LPAD(CUST_ACCT_ID,6,0) CUST_ACCT_ID, MAX(INA_LOC_ID) AS LOC_ID
FROM    PRD_PSAS_DB.RPT.T_LOCATION_MAP
WHERE   INA_LOC_ID IS NOT NULL
AND     CUST_ACCT_ID BETWEEN '000000' AND '999999' 
GROUP BY LPAD(CUST_ACCT_ID,6,0)),

--CUSTOMER ATTRIBUTES
-- CREATE OR REPLACE TABLE 
CUST AS (
SELECT  ACCOUNTID AS ACCOUNT_ID,
        ACCOUNTNAME AS ACCOUNT_NAME,
        TERRITORYID AS TERRITORY_ID,
        HOMEDCID AS HOME_DC_ID,
        STATE AS ACCOUNT_STATE
FROM    DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_CUSTOMER_ACCOUNT_INFO
WHERE   EFFECTIVE_END >= CURRENT_DATE
GROUP BY ACCOUNTID,
        ACCOUNTNAME,
        TERRITORYID,
        HOMEDCID,
        STATE),


-- SELECT * FROM SBX_PSAS_DB.ANALYTICS.T_CPH_ACCT_LEVEL_HIERARCHY WHERE CUST_ACCT_ID='721691';

-- CREATE OR REPLACE TABLE 
HIER AS (
SELECT CUST_ACCT_ID,
REP_NUMBER,
REP_NAME, 
VPS_NUMBER,
VPS_NAME,
AVP_NUMBER,
AVP_NAME,
CASE WHEN YR_MTH='2025-04-01' THEN '2026-01 APR'
     WHEN YR_MTH='2025-05-01' THEN '2026-02 MAY'
     WHEN YR_MTH='2025-06-01' THEN '2026-03 JUN'
     WHEN YR_MTH='2025-07-01' THEN '2026-04 JUL'
     WHEN YR_MTH='2025-08-01' THEN '2026-05 AUG'
     WHEN YR_MTH='2025-09-01' THEN '2026-06 SEP'
     WHEN YR_MTH='2025-10-01' THEN '2026-07 OCT'
     WHEN YR_MTH='2025-11-01' THEN '2026-08 NOV'
     WHEN YR_MTH='2025-12-01' THEN '2026-09 DEC'
     WHEN YR_MTH='2026-01-01' THEN '2026-10 JAN'
     WHEN YR_MTH='2026-02-01' THEN '2026-11 FEB'
     ELSE '2026-12 MAR' END AS PERIOD
FROM SBX_PSAS_DB.ANALYTICS.T_CPH_ACCT_LEVEL_HIERARCHY
WHERE REP_TITLE='SSM' 
AND YR_MTH>='2025-04-01'
AND LTRIM(REP_NUMBER,'0') IN ('292476','171028','237709','301797','81371','224809','285327','82842','253096','189390')
AND LTRIM(SLS_TERR_ID,'0') NOT IN ('1030','353','477','904','557','1036')
--ABOVE TWO FILTERS ARE SHARED BY KATIE
GROUP BY CUST_ACCT_ID,
REP_NUMBER,
REP_NAME, 
VPS_NUMBER,
VPS_NAME,
AVP_NUMBER,
AVP_NAME,
CASE WHEN YR_MTH='2025-04-01' THEN '2026-01 APR'
     WHEN YR_MTH='2025-05-01' THEN '2026-02 MAY'
     WHEN YR_MTH='2025-06-01' THEN '2026-03 JUN'
     WHEN YR_MTH='2025-07-01' THEN '2026-04 JUL'
     WHEN YR_MTH='2025-08-01' THEN '2026-05 AUG'
     WHEN YR_MTH='2025-09-01' THEN '2026-06 SEP'
     WHEN YR_MTH='2025-10-01' THEN '2026-07 OCT'
     WHEN YR_MTH='2025-11-01' THEN '2026-08 NOV'
     WHEN YR_MTH='2025-12-01' THEN '2026-09 DEC'
     WHEN YR_MTH='2026-01-01' THEN '2026-10 JAN'
     WHEN YR_MTH='2026-02-01' THEN '2026-11 FEB'
     ELSE '2026-12 MAR' END),

GOAL AS (
SELECT DISTINCT *,
CASE WHEN CALENDARMONTH='APRIL 2025' THEN '2026-01 APR'
             WHEN CALENDARMONTH='MAY 2025' THEN '2026-02 MAY'
             WHEN CALENDARMONTH='JUNE 2025' THEN '2026-03 JUN'
             WHEN CALENDARMONTH='JULY 2025' THEN '2026-04 JUL'
             WHEN CALENDARMONTH='AUGUST 2025' THEN '2026-05 AUG'
             WHEN CALENDARMONTH='SEPTEMBER 2025' THEN '2026-06 SEP'
             WHEN CALENDARMONTH='OCTOBER 2025' THEN '2026-07 OCT'
             WHEN CALENDARMONTH='NOVEMBER 2025' THEN '2026-08 NOV'
             WHEN CALENDARMONTH='DECEMBER 2025' THEN '2026-09 DEC'
             WHEN CALENDARMONTH='JANUARY 2026' THEN '2026-10 JAN'
             WHEN CALENDARMONTH='FEBRUARY 2026' THEN '2026-11 FEB'
             ELSE '2026-12 MAR' END AS PERIOD 
FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_ACCOUNT_GOALS
),
     
ACTUAL AS (
SELECT DISTINCT *,
CASE WHEN CALENDAR_MONTH='APRIL 2025' THEN '2026-01 APR'
             WHEN CALENDAR_MONTH='MAY 2025' THEN '2026-02 MAY'
             WHEN CALENDAR_MONTH='JUNE 2025' THEN '2026-03 JUN'
             WHEN CALENDAR_MONTH='JULY 2025' THEN '2026-04 JUL'
             WHEN CALENDAR_MONTH='AUGUST 2025' THEN '2026-05 AUG'
             WHEN CALENDAR_MONTH='SEPTEMBER 2025' THEN '2026-06 SEP'
             WHEN CALENDAR_MONTH='OCTOBER 2025' THEN '2026-07 OCT'
             WHEN CALENDAR_MONTH='NOVEMBER 2025' THEN '2026-08 NOV'
             WHEN CALENDAR_MONTH='DECEMBER 2025' THEN '2026-09 DEC'
             WHEN CALENDAR_MONTH='JANUARY 2026' THEN '2026-10 JAN'
             WHEN CALENDAR_MONTH='FEBRUARY 2026' THEN '2026-11 FEB'
             ELSE '2026-12 MAR' END AS PERIOD 
FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT_ACTUAL
),
     
--PULL ACTUALS
-- CREATE OR REPLACE TABLE 
PREP AS (
SELECT  HIER.REP_NUMBER AS PAYEE_ID,
        HIER.REP_NAME AS PAYEE_NAME,
        'ISAM' AS ROLE,
        'ISAM' AS ROLE_NAME,
        ACTUAL.ACCOUNT_ID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        ACTUAL.PERIOD,
        ACTUAL.PRODUCT_IDENTIFIER AS PRODUCT_SEGMENT,
        --GROSS PROFIT ACTUALS
        SUM(ACTUAL.GROSS_PROFIT_ACTUALS) AS "GROSS_PROFIT_ACTUAL",
        --NET REVENUE ACTUALS
        SUM(ACTUAL.NET_REVENUE) AS NET_REVENUE_ACTUAL,
        --GENERIC UNITS ACTUALS
        SUM(ACTUAL.GENERIC_UNITS) AS GENERIC_UNITS_ACTUAL,
        0 AS GROSS_PROFIT_GOAL,
        0 AS NET_SALES_GOAL
FROM    ACTUAL ACTUAL
JOIN HIER HIER
ON LTRIM(HIER.CUST_ACCT_ID,'0')=LTRIM(ACTUAL.ACCOUNT_ID,'0')
AND HIER.PERIOD=ACTUAL.PERIOD
LEFT JOIN CUST CUST
ON LTRIM(CUST.ACCOUNT_ID,'0')=LTRIM(ACTUAL.ACCOUNT_ID,'0')
-- WHERE   MARKET_SEGMENT = 'Retail'
GROUP BY HIER.REP_NUMBER,
        HIER.REP_NAME,
        'ISAM',
        'ISAM',
        ACTUAL.ACCOUNT_ID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        ACTUAL.PERIOD,
        ACTUAL.PRODUCT_IDENTIFIER
UNION ALL
SELECT  HIER.REP_NUMBER AS PAYEE_ID,
        HIER.REP_NAME AS PAYEE_NAME,
        'ISAM' AS ROLE,
        'ISAM' AS ROLE_NAME,
        CAST(GOAL.ACCOUNTID AS varchar) AS ACCOUNT_ID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        GOAL.PERIOD,
        'GOALS' AS PRODUCT_SEGMENT,
        --GROSS PROFIT ACTUALS
        0 AS GROSS_PROFIT_ACTUAL,
        --NET REVENUE ACTUALS
        0 AS NET_REVENUE_ACTUAL,
        --GENERIC UNITS ACTUALS
        0 AS GENERIC_UNITS_ACTUAL,
        SUM(CASE WHEN GOAL.PRODUCTGROUP = 'GROSS PROFIT' THEN GOAL.TARGETVALUE ELSE 0 END) AS GROSS_PROFIT_GOAL,
        SUM(CASE WHEN GOAL.PRODUCTGROUP = 'NET SALES' THEN GOAL.TARGETVALUE ELSE 0 END) AS NET_SALES_GOAL
FROM    GOAL GOAL
JOIN HIER HIER
ON LTRIM(HIER.CUST_ACCT_ID,'0')=LTRIM(CAST(GOAL.ACCOUNTID AS varchar),'0')
AND HIER.PERIOD=GOAL.PERIOD
LEFT JOIN CUST CUST
ON LTRIM(CUST.ACCOUNT_ID,'0')=LTRIM(CAST(GOAL.ACCOUNTID AS varchar),'0')
WHERE   MARKETSEGMENT NOT LIKE '%MHS%'
AND     PRODUCTGROUP = 'GROSS PROFIT'
--AND     GOALTYPEID = 'ACCOUNT GOAL' --ALLOW STRETCH GOAL TO FLOW THROUGH
GROUP BY HIER.REP_NUMBER,
        HIER.REP_NAME,
        'ISAM',
        'ISAM',
        GOAL.ACCOUNTID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        GOAL.PERIOD,
        'GOALS'),

--CLEAN-UP TABLE
-- CREATE OR REPLACE TABLE 
COMBINED AS (
SELECT  PREP.PAYEE_ID,
        PREP.PAYEE_NAME,
        PREP.ROLE,
        PREP.ROLE_NAME,
        PREP.ACCOUNT_ID,
        PREP.ACCOUNT_NAME,
        PREP.ACCOUNT_STATE,
        PREP.HOME_DC_ID,
        PREP.TERRITORY_ID,
        PREP.PERIOD,
        PREP.PRODUCT_SEGMENT,
        HIER.VPS_NUMBER AS VPS_PAYEE_ID,
        HIER.VPS_NAME AS VPS_PAYEE_NAME,
//        COALESCE(VPS_ORIG.PAYEE_ID,VPS_NEW.PAYEE_ID) AS VPS_PAYEE_ID,
//        COALESCE(VPS_ORIG.PAYEE_NAME, VPS_NEW.PAYEE_NAME) AS VPS_PAYEE_NAME,
        SUM(GROSS_PROFIT_ACTUAL) AS GROSS_PROFIT_ACTUAL,
        SUM(NET_REVENUE_ACTUAL) AS NET_REVENUE_ACTUAL,
        SUM(GENERIC_UNITS_ACTUAL) AS GENERIC_UNITS_ACTUAL,
        SUM(GROSS_PROFIT_GOAL) AS GROSS_PROFIT_GOAL,
        SUM(NET_SALES_GOAL) AS NET_SALES_GOAL
FROM    PREP
LEFT JOIN HIER HIER
ON      LTRIM(PREP.ACCOUNT_ID,'0') = LTRIM(HIER.CUST_ACCT_ID,'0')
AND     PREP.PERIOD = HIER.PERIOD
-- AND     PREP.ACCOUNT_ID <> '0'
//LEFT JOIN VPS VPS_NEW   
//ON      PREP.ACCOUNT_ID = VPS_NEW.ACCOUNT_ID
//AND     PREP.PERIOD = VPS_NEW.PERIOD
//AND     PREP.ROLE <> 'USP_RETAIL_SM' 
//AND     PREP.ACCOUNT_ID = '0'
WHERE   PREP.PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE) --EXCLUDE MONTHS WITHOUT ACTUAL
GROUP BY PREP.PAYEE_ID,
        PREP.PAYEE_NAME,
        PREP.ROLE,
        PREP.ROLE_NAME,
        PREP.ACCOUNT_ID,
        PREP.ACCOUNT_NAME,
        PREP.ACCOUNT_STATE,
        PREP.HOME_DC_ID,
        PREP.TERRITORY_ID,
        PREP.PERIOD,
        PREP.PRODUCT_SEGMENT,
        HIER.VPS_NUMBER,
        HIER.VPS_NAME),
//        COALESCE(VPS_ORIG.PAYEE_ID,VPS_NEW.PAYEE_ID),
//        COALESCE(VPS_ORIG.PAYEE_NAME, VPS_NEW.PAYEE_NAME))

--GROSS PROFIT RANK
-- CREATE OR REPLACE TABLE 
GP_RANK AS (
SELECT      PAYEE_ID, 
            PAYEE_NAME,
            ROLE,
            ROLE_NAME,
            SUM(GROSS_PROFIT_ACTUAL) AS GROSS_PROFIT_ACTUAL,
            SUM(GROSS_PROFIT_GOAL) AS GROSS_PROFIT_GOAL,
            RANK() OVER (PARTITION BY ROLE ORDER BY CASE WHEN SUM(ZEROIFNULL(GROSS_PROFIT_ACTUAL))/ SUM(NULLIFZERO(GROSS_PROFIT_GOAL)) IS NULL THEN 0 ELSE SUM(ZEROIFNULL(GROSS_PROFIT_ACTUAL))/ SUM(NULLIFZERO(GROSS_PROFIT_GOAL)) END DESC) AS GROSS_PROFIT_RANK
            --RANK() OVER (PARTITION BY ROLE ORDER BY SUM(ZEROIFNULL(GROSS_PROFIT_ACTUAL))/ SUM(NULLIFZERO(GROSS_PROFIT_GOAL)) DESC) AS GROSS_PROFIT_RANK
FROM        COMBINED
WHERE       PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE) --EXCLUDE MONTHS WITHOUT ACTUAL
GROUP BY    PAYEE_ID,
            PAYEE_NAME,
            ROLE,
            ROLE_NAME),
            
--FINAL PULL
-- CREATE OR REPLACE TABLE 
FINAL_PREP AS (
  
SELECT      COMBINED.*,
            GP_RANK.GROSS_PROFIT_RANK,
            LOC.LOC_ID
FROM        COMBINED
LEFT JOIN   GP_RANK
ON          COMBINED.PAYEE_ID = GP_RANK.PAYEE_ID
AND         COMBINED.ROLE = GP_RANK.ROLE
LEFT JOIN   LOC
ON          LTRIM(COMBINED.ACCOUNT_ID,'0') = LTRIM(LOC.CUST_ACCT_ID,'0')
WHERE       PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)) --EXCLUDE MONTHS WITHOUT ACTUAL


--FINAL PULL WITH UPDATE OF ACCOUNT NAME
-- CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.FY25_LEADERBOARD_ISAM_CPH AS
SELECT     FINAL_PREP.PAYEE_ID
          , FINAL_PREP.PAYEE_NAME
          , FINAL_PREP.ROLE
          , FINAL_PREP.ROLE_NAME
          , FINAL_PREP.ACCOUNT_ID
          , CUST.ACCOUNT_NAME
          , FINAL_PREP.ACCOUNT_STATE
          , FINAL_PREP.HOME_DC_ID
          , FINAL_PREP.TERRITORY_ID
          , ACCT.ACCT_CHN_NAME
          , FINAL_PREP.PERIOD
          , FINAL_PREP.PRODUCT_SEGMENT
          , FINAL_PREP.VPS_PAYEE_ID
          , FINAL_PREP.VPS_PAYEE_NAME
          , FINAL_PREP.GROSS_PROFIT_ACTUAL
          , FINAL_PREP.NET_REVENUE_ACTUAL
          , FINAL_PREP.GENERIC_UNITS_ACTUAL
          , FINAL_PREP.GROSS_PROFIT_GOAL
          , FINAL_PREP.NET_SALES_GOAL
          , FINAL_PREP.GROSS_PROFIT_RANK
          , FINAL_PREP.LOC_ID
          , HIER.AVP_NUMBER AS AVP_ID
          , HIER.AVP_NAME
          , FINAL_PREP.ROLE AS ROLE_NEW
          , FINAL_PREP.PAYEE_NAME AS REP_NEW
FROM      FINAL_PREP
LEFT JOIN CUST
ON        FINAL_PREP.ACCOUNT_ID = CUST.ACCOUNT_ID  
LEFT JOIN HIER
ON        LTRIM(FINAL_PREP.ACCOUNT_ID,'0') = LTRIM(HIER.CUST_ACCT_ID,'0')
AND       FINAL_PREP.PERIOD=HIER.PERIOD
-- LEFT JOIN ISAM B
-- ON        FINAL_PREP.ACCOUNT_ID = B.CUST_ACCT_ID
-- AND       FINAL_PREP.PERIOD = B.PERIOD
LEFT JOIN PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR ACCT
ON        LTRIM(FINAL_PREP.ACCOUNT_ID,'0')=LTRIM(ACCT.CUST_ACCT_ID,'0')
GROUP BY  FINAL_PREP.PAYEE_ID
          , FINAL_PREP.PAYEE_NAME
          , FINAL_PREP.ROLE
          , FINAL_PREP.ROLE_NAME
          , FINAL_PREP.ACCOUNT_ID
          , CUST.ACCOUNT_NAME
          , FINAL_PREP.ACCOUNT_STATE
          , FINAL_PREP.HOME_DC_ID
          , FINAL_PREP.TERRITORY_ID
          , ACCT.ACCT_CHN_NAME
          , FINAL_PREP.PERIOD
          , FINAL_PREP.PRODUCT_SEGMENT
          , FINAL_PREP.VPS_PAYEE_ID
          , FINAL_PREP.VPS_PAYEE_NAME
          , FINAL_PREP.GROSS_PROFIT_ACTUAL
          , FINAL_PREP.NET_REVENUE_ACTUAL
          , FINAL_PREP.GENERIC_UNITS_ACTUAL
          , FINAL_PREP.GROSS_PROFIT_GOAL
          , FINAL_PREP.NET_SALES_GOAL
          , FINAL_PREP.GROSS_PROFIT_RANK
          , FINAL_PREP.LOC_ID
          , HIER.AVP_NUMBER
          , HIER.AVP_NAME
          , FINAL_PREP.ROLE
          , FINAL_PREP.PAYEE_NAME


-- SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.FY26_LEADERBOARD_ISAM_CPH;

